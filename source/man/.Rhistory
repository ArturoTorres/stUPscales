## --------------------------------------------------------------------------
## PlotMC.event
## --------------------------------------------------------------------------
library(stUPscales)
library(EmiStatR)
# definition of the first summary.agg object
data("P1")
new_data <- matrix(data = NA, nrow = nrow(P1), ncol = 55)
for(i in 1:55){
new_data[,i] <- matrix(data = rnorm(nrow(P1), 45, 15),
nrow = nrow(P1), ncol = 1)
}
new_data <- t(new_data)
new_summary <- MC.summary(p1 = P1, data = new_data)
# deterministic simulation
det <- rnorm(nrow(P1), 45, 15)
det <- cbind(det, rnorm(nrow(P1), 55, 23))
colnames(det) <- c("det1", "det2")
# level of aggregation
delta <- 60*2 # 2 hours
new_summary_agg <- MC.summary.agg(summ = new_summary, det, delta,
func.agg = mean, func.agg.p = sum)
# definition of the second summary.agg object
new_data1 <- matrix(data = NA, nrow = nrow(P1), ncol = 55)
for(i in 1:55){
new_data1[,i] <- matrix(data = rnorm(nrow(P1), 55, 23),
nrow = nrow(P1), ncol = 1)
}
new_data1 <- t(new_data1)
new_summary1 <- MC.summary(p1 = P1, data = new_data1)
new_summary_agg1 <- MC.summary.agg(summ = new_summary1, det, delta,
func.agg = mean, func.agg.p = sum)
# creating the plot for the event
PlotMC.event(summ = new_summary_agg, summ1 = new_summary_agg1, obs = 0,
det.var = "det1", det.var1 = "det2", namePlot = "ExamplePlot",
ylab = "Variable 1 [units]", ylab1 = "Variable 2 [units]",
ntick=10, qUpper= "q95")
# definition of the first summary.agg object
data("P1")
P1 <- P1[1:1100,]
new_data <- matrix(data = NA, nrow = nrow(P1), ncol = 55)
for(i in 1:55){
new_data[,i] <- matrix(data = rnorm(nrow(P1), 45, 15),
nrow = nrow(P1), ncol = 1)
}
new_data <- t(new_data)
new_summary <- MC.summary(p1 = P1, data = new_data)
# deterministic simulation
det <- rnorm(nrow(P1), 45, 15)
det <- cbind(det, rnorm(nrow(P1), 55, 23))
colnames(det) <- c("det1", "det2")
# level of aggregation
delta <- 60*2 # 2 hours
new_summary_agg <- MC.summary.agg(summ = new_summary, det, delta,
func.agg = mean, func.agg.p = sum)
# definition of the second summary.agg object
new_data1 <- matrix(data = NA, nrow = nrow(P1), ncol = 55)
for(i in 1:55){
new_data1[,i] <- matrix(data = rnorm(nrow(P1), 55, 23),
nrow = nrow(P1), ncol = 1)
}
new_data1 <- t(new_data1)
new_summary1 <- MC.summary(p1 = P1, data = new_data1)
new_summary_agg1 <- MC.summary.agg(summ = new_summary1, det, delta,
func.agg = mean, func.agg.p = sum)
# creating the plot for the event
PlotMC.event(summ = new_summary_agg, summ1 = new_summary_agg1, obs = 0,
det.var = "det1", det.var1 = "det2", namePlot = "ExamplePlot",
ylab = "Variable 1 [units]", ylab1 = "Variable 2 [units]",
ntick=10, qUpper= "q95")
## --------------------------------------------------------------------------
## the Monte Carlo simulation: MC.sim
## --------------------------------------------------------------------------
library(EmiStatR)
data(P1)
P1 <- P1[110:(110*2),]
plot(P1[,2], typ="l")
P1 <- P1[180:(110*2),]
plot(P1[,2], typ="l")
data(P1)
P1 <- P1[180:(110*2),]
plot(P1[,2], typ="l")
data(P1)
P1 <- P1[160:(110*2),]
plot(P1[,2], typ="l")
data(P1)
P1 <- P1[165:(110*2),]
plot(P1[,2], typ="l")
library(stUPscales)
setting_EmiStatR <-  setup(id       = "MC_sim1",
nsim     = 5, # 110,
seed     = 123,
mcCores  = 1,
ts.input = P1,
rng      = rng <- list(
qs   = 150,    # [l/PE/d]
CODs = c(pdf = "nor", mu = 4.378, sigma = 0.751),    # log[g/PE/d]
NH4s = c(pdf = "nor", mu = 1.473, sigma = 0.410),    # log[g/PE/d]
qf   = 0.04,     # [l/s/ha]
CODf = 0,              # [g/PE/d]
NH4f = 0,              # [g/PE/d]
CODr = c(pdf = "nor", mu = 3.60, sigma = 1.45),     # 71 log[mg/l]
NH4r = 1,              # [mg/l]
nameCSO = "E1",        # [-]
id      = 1,           # [-]
ns      = "FBH Goesdorf",  # [-]
nm      = "Goesdorf",  # [-]
nc      = "Obersauer", # [-]
numc    = 1,          # [-]
use     = "R/I",  # [-]
Atotal  = 36,              # [ha]
Aimp    = c(pdf = "uni", min = 4.5, max = 25),       # [ha]
Cimp    = c(pdf = "uni", min = 0.25, max = 0.95),  # [-]
Cper    = c(pdf = "uni", min = 0.05, max = 0.60),  # [-]
tfS     = 1,               # [time steps]
pe      = 650,             # [PE]
Qd      = 5,               # [l/s]
Dd      = 0.150,           # [m]
Cd      = 0.18,            # [-]
V       = 190,             #  [m3]
lev.ini = 0.10,            # [m]
lev2vol = list(lev = c(.06, 1.10, 1.30, 3.30),   # [m]
vol = c(0, 31, 45, 190))          # [m3]
),
ar.model  = ar.model <- list(
CODs    = 0.5,
NH4s    = 0.5,
CODr    = 0.7),
var.model = var.model <- list(
inp     = c("", ""), # c("CODs", "NH4s"), # c("", ""),
w       = c(0.04778205, 0.02079010),
A       = matrix(c(9.916452e-01, -8.755558e-05,
-0.003189094, 0.994553910), nrow=2, ncol=2),
C       = matrix(c(0.009126591, 0.002237936,
0.002237936, 0.001850941), nrow=2, ncol=2)))
MC_setup <- MC.setup(setting_EmiStatR)
sims <- MC.sim(x = MC_setup, EmiStatR.cores = 0)
str(sims)
# Defining deterministic input:
library(EmiStatR)
input.det <- input(spatial = 0, zero = 1e-5,
folder = system.file("shiny", package = "EmiStatR"),
cores = 0,
ww = list(qs = 150, CODs = 104, NH4s = 4.7),
inf = list(qf= 0.04, CODf = 0, NH4f = 0),
rw = list(CODr = 71, NH4r = 1, stat = "Dahl"),
P1 = P1, st = list(E1=E1), export = 0)
input()
# Invoking `EmiStatR` with the deterministic input:
sim.det   <- EmiStatR(input.det)
# Defining deterministic input:
library(EmiStatR)
input.det <- input(spatial = 0, zero = 1e-5,
folder = system.file("shiny", package = "EmiStatR"),
cores = 0,
ww = list(qs = 150, CODs = 104, NH4s = 4.7),
inf = list(qf= 0.04, CODf = 0, NH4f = 0),
rw = list(CODr = 71, NH4r = 1, stat = "Dahl"),
P1 = P1, st = list(E1=E1), export = 0)
E1 <- list(id = 1, ns = "FBH Goesdorf", nm = "Goesdorf", nc = "Obersauer", numc = 1,
use = "R/I", Atotal = 36, Aimp = 25.2, Cimp = 0.80, Cper = 0.30,
tfS = 0, pe = 650, Qd = 5,
Dd = 0.150, Cd = 0.18, V = 190, lev.ini = 0.10,
lev2vol = list(lev = c(.06, 1.10, 1.30, 3.30),
vol = c(0, 31, 45, 190))
)
# Defining deterministic input:
library(EmiStatR)
input.det <- input(spatial = 0, zero = 1e-5,
folder = system.file("shiny", package = "EmiStatR"),
cores = 0,
ww = list(qs = 150, CODs = 104, NH4s = 4.7),
inf = list(qf= 0.04, CODf = 0, NH4f = 0),
rw = list(CODr = 71, NH4r = 1, stat = "Dahl"),
P1 = P1, st = list(E1=E1), export = 0)
# Invoking `EmiStatR` with the deterministic input:
sim.det   <- EmiStatR(input.det)
# further arguments
delta <- 10 # minutes
qUpper <- "q999"
event.ini <- as.POSIXct("2016-01-01 18:10:00")
head(P1)
tail(P1)
event.ini <- as.POSIXct("2016-01-02 03:20:00")
event.end <- as.POSIXct("2016-01-02 12:30:00")
new_analysis <- MC.analysis(x = sims, delta = delta, qUpper = qUpper,  p1.det = P1,
sim.det = sim.det, event.ini = event.ini, event.end = event.end,
ntick = 5, summ.data = NULL)
## --------------------------------------------------------------------------
## the Monte Carlo simulation: MC.sim
## --------------------------------------------------------------------------
library(EmiStatR)
data(P1)
P1 <- P1[165:(110*2),]
plot(P1[,2], typ="l")
library(stUPscales)
setting_EmiStatR <-  setup(id       = "MC_sim1",
nsim     = 3, # 110,
seed     = 123,
mcCores  = 1,
ts.input = P1,
rng      = rng <- list(
qs   = 150,    # [l/PE/d]
CODs = c(pdf = "nor", mu = 4.378, sigma = 0.751),    # log[g/PE/d]
NH4s = c(pdf = "nor", mu = 1.473, sigma = 0.410),    # log[g/PE/d]
qf   = 0.04,     # [l/s/ha]
CODf = 0,              # [g/PE/d]
NH4f = 0,              # [g/PE/d]
CODr = c(pdf = "nor", mu = 3.60, sigma = 1.45),     # 71 log[mg/l]
NH4r = 1,              # [mg/l]
nameCSO = "E1",        # [-]
id      = 1,           # [-]
ns      = "FBH Goesdorf",  # [-]
nm      = "Goesdorf",  # [-]
nc      = "Obersauer", # [-]
numc    = 1,          # [-]
use     = "R/I",  # [-]
Atotal  = 36,              # [ha]
Aimp    = c(pdf = "uni", min = 4.5, max = 25),       # [ha]
Cimp    = c(pdf = "uni", min = 0.25, max = 0.95),  # [-]
Cper    = c(pdf = "uni", min = 0.05, max = 0.60),  # [-]
tfS     = 1,               # [time steps]
pe      = 650,             # [PE]
Qd      = 5,               # [l/s]
Dd      = 0.150,           # [m]
Cd      = 0.18,            # [-]
V       = 190,             #  [m3]
lev.ini = 0.10,            # [m]
lev2vol = list(lev = c(.06, 1.10, 1.30, 3.30),   # [m]
vol = c(0, 31, 45, 190))          # [m3]
),
ar.model  = ar.model <- list(
CODs    = 0.5,
NH4s    = 0.5,
CODr    = 0.7),
var.model = var.model <- list(
inp     = c("", ""), # c("CODs", "NH4s"), # c("", ""),
w       = c(0.04778205, 0.02079010),
A       = matrix(c(9.916452e-01, -8.755558e-05,
-0.003189094, 0.994553910), nrow=2, ncol=2),
C       = matrix(c(0.009126591, 0.002237936,
0.002237936, 0.001850941), nrow=2, ncol=2)))
MC_setup <- MC.setup(setting_EmiStatR)
sims <- MC.sim(x = MC_setup, EmiStatR.cores = 0)
E1 <- list(id = 1, ns = "FBH Goesdorf", nm = "Goesdorf", nc = "Obersauer", numc = 1,
use = "R/I", Atotal = 36, Aimp = 25.2, Cimp = 0.80, Cper = 0.30,
tfS = 0, pe = 650, Qd = 5,
Dd = 0.150, Cd = 0.18, V = 190, lev.ini = 0.10,
lev2vol = list(lev = c(.06, 1.10, 1.30, 3.30),
vol = c(0, 31, 45, 190))
)
# Defining deterministic input:
library(EmiStatR)
input.det <- input(spatial = 0, zero = 1e-5,
folder = system.file("shiny", package = "EmiStatR"),
cores = 0,
ww = list(qs = 150, CODs = 104, NH4s = 4.7),
inf = list(qf= 0.04, CODf = 0, NH4f = 0),
rw = list(CODr = 71, NH4r = 1, stat = "Dahl"),
P1 = P1, st = list(E1=E1), export = 0)
# Invoking `EmiStatR` with the deterministic input:
sim.det   <- EmiStatR(input.det)
# further arguments
delta <- 10 # minutes
qUpper <- "q999"
event.ini <- as.POSIXct("2016-01-02 03:20:00")
event.end <- as.POSIXct("2016-01-02 12:30:00")
new_analysis <- MC.analysis(x = sims, delta = delta, qUpper = qUpper,  p1.det = P1,
sim.det = sim.det, event.ini = event.ini, event.end = event.end,
ntick = 5, summ.data = NULL)
## --------------------------------------------------------------------------
## PlotMC.season
## --------------------------------------------------------------------------
library(stUPscales)
library(EmiStatR)
data("P1")
P1 <- P1[1100,]
new_data <- matrix(data = NA, nrow = nrow(P1), ncol = 500)
data("P1")
P1 <- P1[1100,]
new_data <- matrix(data = NA, nrow = nrow(P1), ncol = 55)
for(i in 1:55){
new_data[,i] <- matrix(data = rnorm(nrow(P1), 22, 11),
nrow = nrow(P1), ncol = 1)
}
new_data <- t(new_data)
new_summary <- MC.summary(p1 = P1, data = new_data)
head(new_summary)
dim(new_summary)
new_summary$month <- strftime(new_summary[,"time"], format = "%Y-%m")
PlotMC.season(summ1 = new_summary, namePlot = "ExamplePlot",
ylab = "Variable 1 [units]", qUpper = "q95")
data("P1")
P1 <- P1[550,]
new_data <- matrix(data = NA, nrow = nrow(P1), ncol = 55)
for(i in 1:55){
new_data[,i] <- matrix(data = rnorm(nrow(P1), 22, 11),
nrow = nrow(P1), ncol = 1)
}
new_data <- t(new_data)
new_summary <- MC.summary(p1 = P1, data = new_data)
head(new_summary)
dim(new_summary)
new_summary$month <- strftime(new_summary[,"time"], format = "%Y-%m")
PlotMC.season(summ1 = new_summary, namePlot = "ExamplePlot",
ylab = "Variable 1 [units]", qUpper = "q95")
## --------------------------------------------------------------------------
## PlotMC.season
## --------------------------------------------------------------------------
library(stUPscales)
library(EmiStatR)
data("P1")
P1 <- P1[1:550,]
new_data <- matrix(data = NA, nrow = nrow(P1), ncol = 55)
for(i in 1:55){
new_data[,i] <- matrix(data = rnorm(nrow(P1), 22, 11),
nrow = nrow(P1), ncol = 1)
}
new_data <- t(new_data)
new_summary <- MC.summary(p1 = P1, data = new_data)
head(new_summary)
dim(new_summary)
new_summary$month <- strftime(new_summary[,"time"], format = "%Y-%m")
PlotMC.season(summ1 = new_summary, namePlot = "ExamplePlot",
ylab = "Variable 1 [units]", qUpper = "q95")
