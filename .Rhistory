#   scale_fill_brewer(palette="Spectral",direction = 1) +
#   theme(plot.margin = unit(c(1,10,5,6),units="points"))
# dev.off()
#
# ## plot subset
# data.p.subset <- data.p[data.p$time > date1.ini & data.p$time < date1.end  ,]
# head(data.p.subset)
# namePlot <-  paste("contributionsTS_barplot_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
#
# data.melt <- melt(data.p.subset, id.vars = 'time')
#
# pdf(width=10, height=15/5, file= namePlot)
# ggplot(data.melt, aes(x = time, y = value, fill = variable)) +
#   geom_bar(stat = 'identity', position = 'fill') +
#   ylab(paste0(substr(ylab, 1, 4), ", percentage of variation")) +
#   scale_fill_brewer(palette="Spectral",direction = 1) +
#   theme(plot.margin = unit(c(1,10,5,6),units="points"))
# dev.off()
#
# namePlot <-  paste("contributionsTS_areaplot_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
# pdf(width=8.5/3*1.5, height=11/6*1.5, file= namePlot)
# ggplot(data.melt, aes(x = time, y = value, fill = variable)) +
#   geom_area() +
#   scale_fill_brewer(palette="Spectral",direction = 1)
# dev.off()
##===========================================================================================
## TS + bar plot (time series) -- combination -- full year
##===========================================================================================
## call Plot.stacked.combined function
namePlot <-  paste("contributionsTS_barplot_combined_", var.name, "_", date.ini, "_", date.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
Plot.stacked.combined(data.bar, data.melt, namePlot, ylab)
##===========================================================================================
## TS + bar plot (time series) -- combination -- zoom window
##===========================================================================================
## plot subset
data.p.subset <- data.p[data.p$time > date1.ini & data.p$time < date1.end,]
head(data.p.subset)
data.melt1 <- melt(data.p.subset, id.vars = 'time')
namePlot <-  paste("contributionsTS_barplot_combined_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
Plot.stacked.combined(data.bar1, data.melt1, namePlot, ylab)
setwd(folder.current)
print("end of computation ... OK")
# date1.ini <- as.POSIXct("2010-04-01 00:00:00"); date1.end <- as.POSIXct("2010-04-02 18:00:00") # hourly
# date1.ini <- as.POSIXct("2010-06-06 12:00:00"); date1.end <- as.POSIXct("2010-06-07 12:00:00") # hourly
date1.ini <- as.POSIXct("2010-08-26 14:00:00"); date1.end <- as.POSIXct("2010-08-28 02:00:00") # hourly
data.bar1 <- data.bar[data.bar$time > date1.ini & data.bar$time < date1.end  ,]
namePlot <-  paste("contributionsTS_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
P.summ1 <- P.summ[P.summ$time > date1.ini & P.summ$time < date1.end  ,]
Vov.agg1 <- Vov.agg[Vov.agg$time > date1.ini & Vov.agg$time < date1.end  ,]
BCOD.agg1 <- BCOD.agg[BCOD.agg$time > date1.ini & BCOD.agg$time < date1.end  ,]
BNH4.agg1 <- BNH4.agg[BNH4.agg$time > date1.ini & BNH4.agg$time < date1.end  ,]
CODs.summ1 <- CODs.summ[CODs.summ$time > date1.ini & CODs.summ$time < date1.end  ,]
NH4s.summ1 <- NH4s.summ[NH4s.summ$time > date1.ini & NH4s.summ$time < date1.end  ,]
CODr.summ1 <- CODr.summ[CODr.summ$time > date1.ini & CODr.summ$time < date1.end  ,]
Plot.stacked(var.p = P.summ1, var1 = Vov.agg1, var2 = CODs.summ1, var3 = NH4s.summ1,
var4 = CODr.summ1, var5 = BCOD.agg1, var6 = BNH4.agg1, data.bar = data.bar1,
var.name, delta, date.ini=date1.ini, date.end=date1.end, width = 10/2.5)
##===========================================================================================
## preparing data for bar plot (time series)
##===========================================================================================
head(data1)
data1.agg <- Agg.t(data1, "", 60*24, mean, "")
summary(data1.agg)
data2.agg <- Agg.t(data2, "", 60*24, mean, "")
summary(data2.agg)
data3.agg <- Agg.t(data3, "", 60*24, mean, "")
summary(data3.agg)
data4.agg <- Agg.t(data4, "", 60*24, mean, "")
summary(data4.agg)
for(i in 1:nrow(data1.agg)){
data22.p <- (data1.agg[,2] - data2.agg[,2])/data1.agg[,2]*100
data33.p <- (data1.agg[,2] - data3.agg[,2])/data1.agg[,2]*100
data44.p <- (data1.agg[,2] - data4.agg[,2])/data1.agg[,2]*100
}
data.p <- cbind.data.frame(data1.agg[,1])
data.p <- cbind.data.frame(data.p, data1.agg[,2], data22.p, data33.p, data44.p)
colnames(data.p) <- c("time", "var.total", "var1","var2","var3")
data.p[,2:5][data.p[,2:5] < 0] <- 0
summary(data.p)
data.p[,2] <- 100 - data.p[,3] - data.p[,4] - data.p[,5]
colnames(data.p) <- c("time", "P", "var1", "var2", "var3")
data.p[,2:5][is.na(data.p[,2:5] == TRUE)] <- 0
data.p[,2:5][data.p[,2:5] < 0] <- 0
data.p <- data.p[, c("time", "var1", "var2", "var3", "P")]
colnames(data.p) <- c("time", "CODs", "NH4s", "CODr", "P")
summary(data.p)
head(data.p)
## plot complete time series
library(data.table)
data.melt <- melt(data.p, id.vars = 'time')
str(data.melt)
# namePlot <-  paste("contributionsTS_barplot_", var.name, "_", round(delta/60, 2), "h", ".pdf", sep="")
# library(ggplot2)
# pdf(width=10, height=15/5, file= namePlot)
# ggplot(data.melt, aes(x = time, y = value, fill = variable)) +
#   geom_bar(stat = 'identity', position = 'fill') +
#   ylab(paste0(substr(ylab, 1, 4), ", percentage of variation")) +
#   scale_fill_brewer(palette="Spectral",direction = 1) +
#   theme(plot.margin = unit(c(1,10,5,6),units="points"))
# dev.off()
#
# ## plot subset
# data.p.subset <- data.p[data.p$time > date1.ini & data.p$time < date1.end  ,]
# head(data.p.subset)
# namePlot <-  paste("contributionsTS_barplot_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
#
# data.melt <- melt(data.p.subset, id.vars = 'time')
#
# pdf(width=10, height=15/5, file= namePlot)
# ggplot(data.melt, aes(x = time, y = value, fill = variable)) +
#   geom_bar(stat = 'identity', position = 'fill') +
#   ylab(paste0(substr(ylab, 1, 4), ", percentage of variation")) +
#   scale_fill_brewer(palette="Spectral",direction = 1) +
#   theme(plot.margin = unit(c(1,10,5,6),units="points"))
# dev.off()
#
# namePlot <-  paste("contributionsTS_areaplot_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
# pdf(width=8.5/3*1.5, height=11/6*1.5, file= namePlot)
# ggplot(data.melt, aes(x = time, y = value, fill = variable)) +
#   geom_area() +
#   scale_fill_brewer(palette="Spectral",direction = 1)
# dev.off()
##===========================================================================================
## TS + bar plot (time series) -- combination -- full year
##===========================================================================================
## call Plot.stacked.combined function
namePlot <-  paste("contributionsTS_barplot_combined_", var.name, "_", date.ini, "_", date.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
Plot.stacked.combined(data.bar, data.melt, namePlot, ylab)
##===========================================================================================
## TS + bar plot (time series) -- combination -- zoom window
##===========================================================================================
## plot subset
data.p.subset <- data.p[data.p$time > date1.ini & data.p$time < date1.end,]
head(data.p.subset)
data.melt1 <- melt(data.p.subset, id.vars = 'time')
namePlot <-  paste("contributionsTS_barplot_combined_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
Plot.stacked.combined(data.bar1, data.melt1, namePlot, ylab)
setwd(folder.current)
print("end of computation ... OK")
# date1.ini <- as.POSIXct("2010-04-01 00:00:00"); date1.end <- as.POSIXct("2010-04-02 18:00:00") # hourly
date1.ini <- as.POSIXct("2010-06-06 12:00:00"); date1.end <- as.POSIXct("2010-06-07 12:00:00") # hourly
data.bar1 <- data.bar[data.bar$time > date1.ini & data.bar$time < date1.end  ,]
namePlot <-  paste("contributionsTS_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
P.summ1 <- P.summ[P.summ$time > date1.ini & P.summ$time < date1.end  ,]
Vov.agg1 <- Vov.agg[Vov.agg$time > date1.ini & Vov.agg$time < date1.end  ,]
BCOD.agg1 <- BCOD.agg[BCOD.agg$time > date1.ini & BCOD.agg$time < date1.end  ,]
BNH4.agg1 <- BNH4.agg[BNH4.agg$time > date1.ini & BNH4.agg$time < date1.end  ,]
CODs.summ1 <- CODs.summ[CODs.summ$time > date1.ini & CODs.summ$time < date1.end  ,]
NH4s.summ1 <- NH4s.summ[NH4s.summ$time > date1.ini & NH4s.summ$time < date1.end  ,]
CODr.summ1 <- CODr.summ[CODr.summ$time > date1.ini & CODr.summ$time < date1.end  ,]
Plot.stacked(var.p = P.summ1, var1 = Vov.agg1, var2 = CODs.summ1, var3 = NH4s.summ1,
var4 = CODr.summ1, var5 = BCOD.agg1, var6 = BNH4.agg1, data.bar = data.bar1,
var.name, delta, date.ini=date1.ini, date.end=date1.end, width = 10/2.5)
##===========================================================================================
## preparing data for bar plot (time series)
##===========================================================================================
head(data1)
data1.agg <- Agg.t(data1, "", 60*24, mean, "")
summary(data1.agg)
data2.agg <- Agg.t(data2, "", 60*24, mean, "")
summary(data2.agg)
data3.agg <- Agg.t(data3, "", 60*24, mean, "")
summary(data3.agg)
data4.agg <- Agg.t(data4, "", 60*24, mean, "")
summary(data4.agg)
for(i in 1:nrow(data1.agg)){
data22.p <- (data1.agg[,2] - data2.agg[,2])/data1.agg[,2]*100
data33.p <- (data1.agg[,2] - data3.agg[,2])/data1.agg[,2]*100
data44.p <- (data1.agg[,2] - data4.agg[,2])/data1.agg[,2]*100
}
data.p <- cbind.data.frame(data1.agg[,1])
data.p <- cbind.data.frame(data.p, data1.agg[,2], data22.p, data33.p, data44.p)
colnames(data.p) <- c("time", "var.total", "var1","var2","var3")
data.p[,2:5][data.p[,2:5] < 0] <- 0
summary(data.p)
data.p[,2] <- 100 - data.p[,3] - data.p[,4] - data.p[,5]
colnames(data.p) <- c("time", "P", "var1", "var2", "var3")
data.p[,2:5][is.na(data.p[,2:5] == TRUE)] <- 0
data.p[,2:5][data.p[,2:5] < 0] <- 0
data.p <- data.p[, c("time", "var1", "var2", "var3", "P")]
colnames(data.p) <- c("time", "CODs", "NH4s", "CODr", "P")
summary(data.p)
head(data.p)
## plot complete time series
library(data.table)
data.melt <- melt(data.p, id.vars = 'time')
str(data.melt)
# namePlot <-  paste("contributionsTS_barplot_", var.name, "_", round(delta/60, 2), "h", ".pdf", sep="")
# library(ggplot2)
# pdf(width=10, height=15/5, file= namePlot)
# ggplot(data.melt, aes(x = time, y = value, fill = variable)) +
#   geom_bar(stat = 'identity', position = 'fill') +
#   ylab(paste0(substr(ylab, 1, 4), ", percentage of variation")) +
#   scale_fill_brewer(palette="Spectral",direction = 1) +
#   theme(plot.margin = unit(c(1,10,5,6),units="points"))
# dev.off()
#
# ## plot subset
# data.p.subset <- data.p[data.p$time > date1.ini & data.p$time < date1.end  ,]
# head(data.p.subset)
# namePlot <-  paste("contributionsTS_barplot_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
#
# data.melt <- melt(data.p.subset, id.vars = 'time')
#
# pdf(width=10, height=15/5, file= namePlot)
# ggplot(data.melt, aes(x = time, y = value, fill = variable)) +
#   geom_bar(stat = 'identity', position = 'fill') +
#   ylab(paste0(substr(ylab, 1, 4), ", percentage of variation")) +
#   scale_fill_brewer(palette="Spectral",direction = 1) +
#   theme(plot.margin = unit(c(1,10,5,6),units="points"))
# dev.off()
#
# namePlot <-  paste("contributionsTS_areaplot_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
# pdf(width=8.5/3*1.5, height=11/6*1.5, file= namePlot)
# ggplot(data.melt, aes(x = time, y = value, fill = variable)) +
#   geom_area() +
#   scale_fill_brewer(palette="Spectral",direction = 1)
# dev.off()
##===========================================================================================
## TS + bar plot (time series) -- combination -- full year
##===========================================================================================
## call Plot.stacked.combined function
namePlot <-  paste("contributionsTS_barplot_combined_", var.name, "_", date.ini, "_", date.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
Plot.stacked.combined(data.bar, data.melt, namePlot, ylab)
##===========================================================================================
## TS + bar plot (time series) -- combination -- zoom window
##===========================================================================================
## plot subset
data.p.subset <- data.p[data.p$time > date1.ini & data.p$time < date1.end,]
head(data.p.subset)
data.melt1 <- melt(data.p.subset, id.vars = 'time')
namePlot <-  paste("contributionsTS_barplot_combined_", var.name, "_", date1.ini, "_", date1.end, "_", round(delta/60, 2), "h", ".pdf", sep="")
Plot.stacked.combined(data.bar1, data.melt1, namePlot, ylab)
setwd(folder.current)
print("end of computation ... OK")
getwd()
#' Alternatively we can incorporate the animation directly into a pdf—though for
#' this to work we need to work with LaTeX and use the LaTeX animate-package.
require("animation")
#' Alternatively we can incorporate the animation directly into a pdf—though for
#' this to work we need to work with LaTeX and use the LaTeX animate-package.
require("animation")
oopt = ani.options(interval = 0.02, nmax = 100)
test.function = function (xy, I, nmax) {
x = xy[,1]
y = xy[,2]
scIcubed = I^(1/4)/(max(I[,10:IT]^(1/4)))
for (i in seq_len(ani.options("nmax"))) {
dev.hold()
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
ani.pause()
}
}
saveLatex({
test.function(xy=xy, I=I, nmax=50)
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/texbin/pdflatex",
img.name = "Xplot")
#' Alternatively we can incorporate the animation directly into a pdf—though for
#' this to work we need to work with LaTeX and use the LaTeX animate-package.
require("animation")
oopt = ani.options(interval = 0.02, nmax = 100)
test.function = function (xy, I, nmax) {
x = xy[,1]
y = xy[,2]
scIcubed = I^(1/4)/(max(I[,10:IT]^(1/4)))
for (i in seq_len(ani.options("nmax"))) {
dev.hold()
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
ani.pause()
}
}
saveLatex({
test.function(xy=xy, I=I, nmax=50)
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/texbin/pdflatex",
img.name = "Xplot")
#' Alternatively we can incorporate the animation directly into a pdf—though for
#' this to work we need to work with LaTeX and use the LaTeX animate-package.
m = 0.25
ny = nx = 30
# generate coordinates
xy = expand.grid(x = 1:nx, y = 1:ny)
require("animation")
oopt = ani.options(interval = 0.02, nmax = 100)
test.function = function (xy, I, nmax) {
x = xy[,1]
y = xy[,2]
scIcubed = I^(1/4)/(max(I[,10:IT]^(1/4)))
for (i in seq_len(ani.options("nmax"))) {
dev.hold()
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
ani.pause()
}
}
saveLatex({
test.function(xy=xy, I=I, nmax=50)
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/texbin/pdflatex",
img.name = "Xplot")
#' The S and I matrices will hold the results from the simulation. We will run the
#' model for IT=520 iterations (= 20 years). Assume that all patches have S0 =
#' 100 susceptibles and that 1 infected is introduced in location {400, 1}:
IT = 520
S = I = matrix(NA, nrow = ny * nx, ncol = IT)
S[, 1] = 100
I[, 1] = 0
I[400, 1] = 1
require("animation")
oopt = ani.options(interval = 0.02, nmax = 100)
test.function = function (xy, I, nmax) {
x = xy[,1]
y = xy[,2]
scIcubed = I^(1/4)/(max(I[,10:IT]^(1/4)))
for (i in seq_len(ani.options("nmax"))) {
dev.hold()
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
ani.pause()
}
}
saveLatex({
test.function(xy=xy, I=I, nmax=50)
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/texbin/pdflatex",
img.name = "Xplot")
seq_len(ani.options("nmax")
)
i = 1
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
x = xy[,1]
y = xy[,2]
scIcubed = I^(1/4)/(max(I[,10:IT]^(1/4)))
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
dev.hold()
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
ani.pause()
oopt = ani.options(interval = 0.02, nmax = 100)
test.function = function (xy, I, nmax) {
x = xy[,1]
y = xy[,2]
scIcubed = I^(1/4)/(max(I[,10:IT]^(1/4)))
for (i in seq_len(ani.options("nmax"))) {
dev.hold()
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
ani.pause()
}
}
saveLatex({
test.function(xy=xy, I=I, nmax=50)
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/texbin/pdflatex",
img.name = "Xplot")
test.function(xy=xy, I=I, nmax=50)
oopt = ani.options(interval = 0.02, nmax = 100)
test.function = function (xy, I, nmax) {
x = xy[,1]
y = xy[,2]
scIcubed = I^(1/4)/(max(I[,10:IT]^(1/4)))
for (i in seq_len(ani.options("nmax"))) {
dev.hold()
symbols(x,y,fg=2,circles=I[,i],inches=0.1,bg=2,
xlab="",ylab="")
ani.pause()
}
}
saveLatex({
test.function(xy=xy, I=I, nmax=50)
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/texbin/pdflatex",
img.name = "Xplot")
brownian.motion()
saveLatex({
brownian.motion()
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/texbin/pdflatex",
img.name = "Xplot")
saveLatex({
brownian.motion()
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/bin/pdflatex",
img.name = "Xplot")
oopt = ani.options(interval = 0.02, nmax = 120)
saveLatex({
brownian.motion()
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/bin/pdflatex",
img.name = "Xplot")
saveLatex({
brownian.motion()
},
ani.basename = "BM", ani.opts = "controls,loop,
width=0.8\\textwidth", ani.first =
par(mar = c(3, 3, 1, 0.5), mgp = c(2, 0.5, 0),
tcl = -0.3, cex.axis = 0.8, cex.lab = 0.8,
cex.main = 1), latex.filename = "test_animation.tex",
pdflatex = "/usr/bin/pdflatex",
img.name = "Xplot")
rm(list = ls())
data <- structure(list(Time = 1:7,
A = c(33046, 970250, 1870125, 259625, 3838750, 962333, 2272917),
B = c(196, 578, 323, 509, 215, 5437, 41028),
C = c(0.81, 0.94, 2.31, 12.2, 11.5, 4.7, 10.1)),
row.names = c(NA, -7L),
class = c("tbl_df", "tbl", "data.frame"))
opar <- par(mar = c(5,4,4,4) + 0.1)
plot(data$Time, data$A, type = "l",  xlim = NULL, ylim = c(100,10000000),
log = "y", main = "Title", xlab = "Time", ylab = "copies", col= "blue")
par(new = TRUE)
plot(data$Time, data$B, type = "l",  xlim = NULL, ylim = c(100,10000000),
log = "y", main = "", xlab = "", ylab = "", col= "green")
par(new = TRUE)
plot(data$C, type = "l", xaxt = "n", yaxt = "n",
ylab = "", xlab = "", col = "red", lty = 2, )
axis(side = 4)
mtext("secondary axis", side = 4, line = 3, col="red")
legend("topleft", c("A", "B", "C"),
col = c("blue", "green", "red"), lty = c(1, 1, 2))
par(opar)
plot(data$Time, data$A, type = "l",  xlim = NULL, ylim = c(100,10000000),
log = "y", main = "Title", xlab = "Time", ylab = "copies", col= "blue")
##---------------------------------------------------------------------
## user's configuration (III)
##---------------------------------------------------------------------
## working directory
wdir <-  "~/Documents/02_working/3-Production/05_IV-Year/05_models/01_stUPscales/stUPscales/"
## Gitlab repository
username   <- "Arturo.Torres"
password   <- "sehajsamadhi1A"
repository <- "git.list.lu/geocomputation/quics/stUPscales.git"
credential <- paste0("https://", username, ":", password, "@", repository)
##---------------------------------------------------------------------
## commit changes locally
##---------------------------------------------------------------------
## change to working directory
setwd(wdir)
## to see status of files
system("git status")
## commit label
commit.label <- 'MC summary output file updated'
## to see status of files
system("git status")
## to look previous status of commmits
system("git log")
## find and write big files in .gitignore
system("find . -size +50M | cat >> .gitignore")
## to stage files
system("git add .")
## to commit changes with label
system(paste0("git commit -a -m '", commit.label, "'"))
## to see status of files
system("git status")
## to look previous status of commmits
system("git log")
##---------------------------------------------------------------------
## configuring remote.origin.url for Github repository and pushing
##---------------------------------------------------------------------
system(paste0("git config remote.origin.url ", credential))
system(paste0("git push ", credential, " master"))
credential
